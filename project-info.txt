Project Title: Secure EC2 to S3 Communication via Private VPC Endpoint

Description:
This Terraform project provisions a secure and scalable AWS infrastructure using a 3-tier architecture design. It deploys public and private subnets, creates EC2 instances, and allows secure access from private EC2 instances to an S3 bucket using a VPC Gateway Endpointâ€”bypassing the public internet.

Main Features:
- Custom VPC with public and private subnets (in different availability zones).
- Public EC2 instance for administrative access.
- Private EC2 instance with no public IP, capable of internet access via NAT Gateway.
- Internet Gateway for public subnet.
- NAT Gateway for internet-bound traffic from private subnet.
- Security groups for controlled access.
- S3 bucket with name provided as a variable.
- VPC Gateway Endpoint to allow private EC2 to securely access S3 via private AWS network.

Terraform Files:
- vpc.tf: Creates VPC, subnets, route tables, and NAT gateway.
- ec2.tf: Launches EC2 instances in public and private subnets.
- s3.tf: Creates the S3 bucket and the VPC Gateway Endpoint.
- variables.tf: Defines input variables (including S3 bucket name).
- provider.tf: Configures AWS provider and region.

How to Run:
1. Go To Git Bash
2. Then got to your Repo  using: ====  cd ~/.ssh 
3. Generate SSH key using:
   ssh-keygen
   ls -l       (for show data or list)
    show this type of list 
    $ ls -l
total xyz
drwxr-xr-x 1 Sanket 197121     0 Mar 11 16:32 DevOps_git/
-rw-r--r-- 1 Sanket 197121   419 May  6 10:42 id_ed25519
-rw-r--r-- 1 Sanket 197121   104 May  6 10:42 id_ed25519.pub
-rw-r--r-- 1 Sanket 197121 19801 May  8 15:00 known_hosts
-rw-r--r-- 1 Sanket 197121 19598 May  8 15:00 known_hosts.old

   cat id_ed25519.pub            (use this cammand for show your public key)


4. Run:
   terraform init  
   terraform plan     (Blue Print Of Your Project)
   terraform apply

GitHub Instructions:
- Initialize git repo:
    git init
- Add remote and push:
    git clone https://github.com/your-username/secure-ec2-s3-project.git
    add files (Terraform Code)
    git add *
    git commit -m "Initial Terraform setup for secure EC2-S3 VPC endpoint"
    git push -u origin add-your-branch-name

Note:
This setup ensures that sensitive data never leaves the AWS private network when accessing S3 from EC2. Perfect for production-grade workloads.

Author: Sanket Tambe

